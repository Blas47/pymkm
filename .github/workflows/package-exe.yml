# This is a basic workflow to help you get started with Actions

name: Package executable

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    types: [created]
  release:
    types: [created]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: PyInstaller Windows
        uses: JackMcKew/pyinstaller-action-windows@main
        with:
          path: .

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.0

      - name: Zip folder
        run: |
          cd ./dist/windows/
          zip -r ./pymkm.zip ./pymkm/

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }} #${{ steps.get_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/windows/pymkm.zip
          asset_name: pymkm.zip
          asset_content_type: application/zip
